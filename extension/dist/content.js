console.log("[AI Autocomplete] Content script loaded");let a=null,i=null,o=null;function g(){const t=document.createElement("span");return t.style.position="absolute",t.style.left="0",t.style.top="0",t.style.opacity="0.5",t.style.color="#666",t.style.pointerEvents="none",t}async function y(t){console.log("[AI Autocomplete] Fetching suggestion for input:",t);try{const e=await fetch("http://localhost:3000/api/autocomplete",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({input:t})});if(!e.ok)throw new Error("Failed to get suggestion");const n=await e.json();return console.log("[AI Autocomplete] Suggestion received:",n.suggestion),n.suggestion}catch(e){return console.error("[AI Autocomplete] Error getting suggestion:",e),null}}function c(t){return t instanceof HTMLInputElement||t instanceof HTMLTextAreaElement?t.value:t instanceof HTMLElement&&t.isContentEditable?t.innerText:""}function f(t,e){t instanceof HTMLInputElement||t instanceof HTMLTextAreaElement?t.value=e:t instanceof HTMLElement&&t.isContentEditable&&(t.innerText=e)}function u(t){return t.replace(/[&<>'"]/g,e=>({"&":"&amp;","<":"&lt;",">":"&gt;","'":"&#39;",'"':"&quot;"})[e])}function h(t){const e=window.getComputedStyle(t).color;let n=0,s=0,r=0;if(e.startsWith("rgb"))[n,s,r]=e.match(/\d+/g).map(Number);else if(e.startsWith("#")){const l=e.replace("#","");l.length===3?(n=parseInt(l[0]+l[0],16),s=parseInt(l[1]+l[1],16),r=parseInt(l[2]+l[2],16)):l.length===6&&(n=parseInt(l.slice(0,2),16),s=parseInt(l.slice(2,4),16),r=parseInt(l.slice(4,6),16))}return(n*299+s*587+r*114)/1e3>180?"rgba(255,255,255,0.7)":"rgba(60,60,60,0.7)"}function m(t,e){console.log("[AI Autocomplete] Updating ghost text:",e),o||(o=g(),document.body.appendChild(o)),console.log("ghostElement",o);const n=t.getBoundingClientRect();o.style.position="absolute",o.style.left=`${n.left+window.scrollX}px`,o.style.top=`${n.top+window.scrollY}px`,o.style.width=`${n.width}px`,o.style.height=`${n.height}px`,o.style.fontSize=window.getComputedStyle(t).fontSize,o.style.fontFamily=window.getComputedStyle(t).fontFamily,o.style.padding=window.getComputedStyle(t).padding,o.style.border=window.getComputedStyle(t).border,o.style.background="transparent",o.style.zIndex="999999",o.style.pointerEvents="none",o.style.whiteSpace="pre-wrap",o.style.display="block";const s=h(t);o.innerHTML=`<span style='opacity:0; user-select:none;'>${u(c(t))}</span><span style='opacity:0.7; color:${s};'>${u(e)}</span>`}function d(t){const e=t.target,n=c(e);console.log("[AI Autocomplete] Input event detected:",n),i=null,o&&o.parentElement&&(console.log("[AI Autocomplete] Removing ghost element"),o.remove(),o=null),a&&clearTimeout(a),a=window.setTimeout(async()=>{const s=await y(n);s&&(i=s,m(e,s))},1e3)}function p(t){console.log("handleKeyDown");const e=t,n=e.target;if((e.key==="Tab"||e.key==="ArrowRight")&&i){if(console.log("[AI Autocomplete] Accepting suggestion with key:",e.key),e.preventDefault(),n instanceof HTMLElement&&n.isContentEditable)n.focus(),document.execCommand("insertText",!1,i)||alert("Could not insert suggestion. Please paste manually.");else{const s=c(n)+i;f(n,s)}i=null,o&&(o.remove(),o=null)}}function w(){const t=document.querySelectorAll('input:not([type="password"]), textarea, [contenteditable="true"]');console.log(`[AI Autocomplete] Initializing. Found ${t.length} input(s)/textarea(s).`),t.forEach(e=>{e.addEventListener("input",d),e.addEventListener("keydown",p),console.log("[AI Autocomplete] Listener attached to:",e)})}document.addEventListener("DOMContentLoaded",w);const b=new MutationObserver(t=>{t.forEach(e=>{e.addedNodes.length&&document.querySelectorAll('input:not([type="password"]), textarea, [contenteditable="true"]').forEach(s=>{s.hasAttribute("data-autocomplete-initialized")||(s.addEventListener("input",d),s.addEventListener("keydown",p),s.setAttribute("data-autocomplete-initialized","true"),console.log("[AI Autocomplete] Listener attached to (dynamic):",s))})})});b.observe(document.body,{childList:!0,subtree:!0});
