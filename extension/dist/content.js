function f(t){let n=t;for(let e=0;e<6&&!(!n.parentElement||(n=n.parentElement,n.innerText&&n.innerText.length>200)||n.children.length>5);e++);return n}function y(t){const n=t.querySelectorAll("p,span,div,li,blockquote"),e=[];return n.forEach(o=>{const i=window.getComputedStyle(o);o.innerText&&o.innerText.trim().length>0&&i.display!=="none"&&i.visibility!=="hidden"&&i.opacity!=="0"&&e.push(o.innerText.trim())}),e.join(`
`).slice(-2e3)}function h(t){const n=f(t);return y(n)}function m(){const t=document.createElement("span");return t.style.position="absolute",t.style.left="0",t.style.top="0",t.style.opacity="0.5",t.style.color="#666",t.style.pointerEvents="none",t}function d(t){return t.replace(/[&<>'"]/g,n=>({"&":"&amp;","<":"&lt;",">":"&gt;","'":"&#39;",'"':"&quot;"})[n])}function b(t){const n=window.getComputedStyle(t).color;let e=0,o=0,i=0;if(n.startsWith("rgb"))[e,o,i]=n.match(/\d+/g).map(Number);else if(n.startsWith("#")){const s=n.replace("#","");s.length===3?(e=parseInt(s[0]+s[0],16),o=parseInt(s[1]+s[1],16),i=parseInt(s[2]+s[2],16)):s.length===6&&(e=parseInt(s.slice(0,2),16),o=parseInt(s.slice(2,4),16),i=parseInt(s.slice(4,6),16))}return(e*299+o*587+i*114)/1e3>180?"rgba(255,255,255,0.7)":"rgba(60,60,60,0.7)"}function w(t,n,e,o){const i=t.getBoundingClientRect();e.style.position="absolute",e.style.left=`${i.left+window.scrollX}px`,e.style.top=`${i.top+window.scrollY}px`,e.style.width=`${i.width}px`,e.style.height=`${i.height}px`,e.style.fontSize=window.getComputedStyle(t).fontSize,e.style.fontFamily=window.getComputedStyle(t).fontFamily,e.style.padding=window.getComputedStyle(t).padding,e.style.border=window.getComputedStyle(t).border,e.style.background="transparent",e.style.zIndex="999999",e.style.pointerEvents="none",e.style.whiteSpace="pre-wrap",e.style.display="block";const u=b(t);e.innerHTML=`<span style='opacity:0; user-select:none;'>${d(o(t))}</span><span style='opacity:0.7; color:${u};'>${d(n)}</span>`}async function x(t,n){console.log("[AI Autocomplete] Fetching suggestion for input:",t);try{const e=await fetch("http://localhost:3000/api/autocomplete",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({input:t,context:n})});if(!e.ok)throw new Error("Failed to get suggestion");const o=await e.json();return console.log("[AI Autocomplete] Suggestion received:",o.suggestion),o.suggestion}catch(e){return console.error("[AI Autocomplete] Error getting suggestion:",e),null}}function a(t){return t instanceof HTMLInputElement||t instanceof HTMLTextAreaElement?t.value:t instanceof HTMLElement&&t.isContentEditable?t.innerText:""}function A(t,n){t instanceof HTMLInputElement||t instanceof HTMLTextAreaElement?t.value=n:t instanceof HTMLElement&&t.isContentEditable&&(t.innerText=n)}let r=null,l=null,c=null;function p(t){const n=t.target,e=a(n);console.log("[AI Autocomplete] Input event detected:",e),r=null,l&&l.parentElement&&(console.log("[AI Autocomplete] Removing ghost element"),l.remove(),l=null),c&&clearTimeout(c),c=window.setTimeout(async()=>{const o=h(n);console.log("[AI Autocomplete] Extracted context:",o);const i=await x(e,o);i&&(r=i,l||(l=m(),document.body.appendChild(l)),w(n,i,l,a))},1e3)}function g(t){console.log("handleKeyDown");const n=t,e=n.target;if((n.key==="Tab"||n.key==="ArrowRight")&&r){if(console.log("[AI Autocomplete] Accepting suggestion with key:",n.key),n.preventDefault(),e instanceof HTMLElement&&e.isContentEditable)e.focus(),document.execCommand("insertText",!1,r)||alert("Could not insert suggestion. Please paste manually.");else{const o=a(e)+r;A(e,o)}r=null,l&&(l.remove(),l=null)}}console.log("[AI Autocomplete] Content script loaded");function T(){const t=document.querySelectorAll('input:not([type="password"]), textarea, [contenteditable="true"]');console.log(`[AI Autocomplete] Initializing. Found ${t.length} input(s)/textarea(s).`),t.forEach(n=>{n.addEventListener("input",p),n.addEventListener("keydown",g),console.log("[AI Autocomplete] Listener attached to:",n)})}document.addEventListener("DOMContentLoaded",T);const C=new MutationObserver(t=>{t.forEach(n=>{n.addedNodes.length&&document.querySelectorAll('input:not([type="password"]), textarea, [contenteditable="true"]').forEach(o=>{o.hasAttribute("data-autocomplete-initialized")||(o.addEventListener("input",p),o.addEventListener("keydown",g),o.setAttribute("data-autocomplete-initialized","true"),console.log("[AI Autocomplete] Listener attached to (dynamic):",o))})})});C.observe(document.body,{childList:!0,subtree:!0});
